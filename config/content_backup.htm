<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Weeks</h1>
<h2><span><span>week01-05</span></span></h2>
<h4><span><span><span><span>week01-建倉儲</span></span></span></span></h4>
<p><span><span><span><span>1.下載可攜系統</span></span></span></span></p>
<p><span><span><span><span>2.建一個新倉儲“ cd2020”</span></span></span></span></p>
<p><span><span><span><span>3.進入tmp</span></span></span></span></p>
<p><span><span><span><span>4.git clone  </span></span></span></span><a href="https://github.com/s40723234/cd2020.git"><span><span><span><span>https://github.com/s40723234/cd2020.git</span></span></span></span></a></p>
<p><span><span><span><span>5.git子模塊添加</span></span></span></span><a href="https://github.com/mdecourse/cmsimde.git"><span><span><span><span>https://github.com/mdecourse/cmsimde.git</span></span></span></span></a></p>
<p><span><span><span><span>6.進入cmsimde，輸入python -m pip install flask_cors</span></span></span></span></p>
<p><span><span><span><span>7.開始編輯倉儲</span></span></span></span></p>
<p><span><span><span><span>8.處理結束，git status&gt; git add。</span></span></span><span><span><span>&gt; git commit -m“標題”&gt; git push</span></span></span></span></p>
<p><span><span><span><span>9.開啟github倉儲設定，點選要推進的分支</span></span></span></span></p>
<h4><span><span><span><span>week1更新python 3.8.2</span></span></span></span></h4>
<p><span><span><span><span>1.下載3.8.2安裝檔</span></span></span></span></p>
<p><span><span><span><span>2.開啟點擊自定義安裝 </span></span></span></span></p>
<p><span><span><span><span>3.取消點</span></span></span></span></p>
<p><span><span><span><span>4.改路徑至Y槽“ py382”</span></span></span></span></p>
<p><span><span><span><span>5.開編輯器開“ start_mdecourse.bat”</span></span></span></span></p>
<p><span><span><span><span>6.將檔中的py373全部改成py382，重新啟動</span></span></span></span></p>
<p><span><span><span><span>7.於Y槽中執行，python get-pip.py來安裝pip</span></span></span></span></p>
<p><span><span><span><span>8.完成之後，來安裝兩端，輸入pip install flask</span></span></span></span></p>
<p><span><span><span><span>9.</span></span></span><span><span><span>lxml .bs4 .flask_cors .pelican .leo</span></span></span></span></p>
<h4><span><span><span><span>week2-分組</span></span></span></span></h4>
<p><span><span><span><span>以下是直播影片：</span></span></span></span></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="//www.youtube.com/embed/r0AABAp474U" width="560"></iframe></p>
<h4><span><span><span><span>assignment1-可攜系統</span></span></span></span></h4>
<p><span><span><span><span>step001-先在隨身碟底下創一個CD2020的資料夾，並在裡面創一個data</span></span></span></span></p>
<p><span><span><span><span>step002-在數據下添加資料夾，分別有PortableGit / msys2 / python777 / wscite666 /   </span></span></span></span><span><span><span><span>tmp / home</span></span></span></span></p>
<p><span><span><span><span><span>step003-PortableGit</span></span></span></span></span></p>
<p><span><span>             1. </span><span><span>適用於Windows Portable的</span></span></span><a href="https://git-scm.com/download/win"><span><span>https://git-scm.com/download/win</span></span></a><span><span>下載</span></span><span><span><span>64位 </span></span></span><span><span><span>Git </span></span></span></p>
<p><span><span><span>             2.安裝到CD2020 / data / PortableGit </span></span></span></p>
<p><span><span><span>step004- </span></span></span><span><span><span>MSYS2</span></span></span></p>
<p><span><span><span>            1.  </span></span><a href="https://www.msys2.org/"><span><span>https://www.msys2.org/</span></span></a><span><span>  下載msys2-x86_64-20190524.exe </span></span></span></p>
<p><span><span><span>             2.安裝檔案到CD2020 / data / msys2</span></span></span></p>
<p><span><span><span> step005-python777</span></span></span></p>
<p><span><span><span>            1.  </span></span><a href="https://www.python.org/downloads/release/python-382/"><span><span>https://www.python.org/downloads/release/python-382/</span></span></a><span><span>  下載Windows </span></span></span><span><span><span>x86- 64可執行安裝程序</span></span></span></p>
<p><span><span><span>            2. 安裝並複制檔案到CD2020 / data / python777</span></span></span></p>
<p><span><span><span>steo006-wscite666</span></span></span></p>
<p><span><span><span>          1.到  </span></span><a href="https://www.scintilla.org/SciTEDownload.html"><span><span>https://www.scintilla.org/SciTEDownload.html</span></span></a><span><span>  下載完整的64位下載                </span></span></span></p>
<p><span>           2.解壓縮檔案到 CD2020/data/wscite237輯器執行的 Scite.exe </span></p>
<p><span>           3.打開</span><span>Options 下的 Global Options File 其中的預設值 code.page=0 修改設定</span><span>為 </span><span>code.page=65001，將 load.on.activate=1 前面的井字號拿掉</span></p>
<p>step007 - home</p>
<p>          1.到2019fall/data/home  copy   .gitconfig paste home </p>
<p>step008 - tcc</p>
<p>         1.到 <a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a> 接著到命令提示字元裡 git    clone <a href="https://github.com/TinyCC/tinycc.git">https://github.com/TinyCC/tinycc.git</a> tcc</p>
<p>step009 - Jupyterlab</p>
<p><span>         1.命令提示字元裡 pip install jupyterlab==2.0.1 自動安裝</span></p>
<p>step010 - Fossil SCM</p>
<p>       1.到 <a href="https://www.fossil-scm.org/home/doc/trunk/www/index.wiki">https://www.fossil-scm.org/home/doc/trunk/www/index.wiki</a>下載fossil scm</p>
<p>        2.<span>解壓到 CD2020/data</span></p>
<p>step011 - Flutter</p>
<p><span><span><span><span>        1. </span></span></span></span><a href="https://github.com/flutter/flutter"><span><span><span><span>https://github.com/flutter/flutter</span></span></span></span></a><span><span><span><span>  裡</span></span></span></span><span><span><span><span><span>接著到命令提示字元里git  </span></span></span></span></span><span><span><span><span><span>clone https://github.com/flutter/flutter.git -b穩定</span></span></span></span></span></p>
<p><span><span><span><span><span>step012-vscode</span></span></span></span></span></p>
<p><span><span><span><span><span>       1. </span></span></span></span><a href="https://github.com/microsoft/vscode"><span><span><span><span>https://github.com/microsoft/vscode</span></span></span></span></a><span><span><span><span>  接下來到命令提示字元里git </span></span></span></span></span><span><span><span><span><span>clone https://github.com/microsoft/vscode.git vscode</span></span></span></span></span></p>
<p><span><span><span><span>step013-tmp</span></span></span></span></p>
<p><span><span><span><span>        1.git clone自己的倉儲</span></span></span></span></p>
<p><span><span><span><span><span>        2.安裝pip和cmsimde所需模組</span></span></span></span></span></p>
<p><span><span><span><span><span>step014- </span></span></span></span></span></p>
<p><span><span><span><span><span>       1.先到  </span></span></span></span><a href="https://bootstrap.pypa.io/get-pip.py"><span><span><span><span>https://bootstrap.pypa.io/get-pip.py</span></span></span></span></a><span><span><span><span>  下載get-pip.py，並用程式碼自動</span></span></span></span></span><span><span><span><span><span>載入</span></span></span></span></span></p>
<h6><span><img alt="" height="287" src="https://s40723237.github.io/cd2020/images/WgLEB8kAJe.png" width="550"/></span></h6>
<h6>以下是影片</h6>
<p><a href="https://www.youtube.com/watch?v=XbHZMnWAvQI">https://www.youtube.com/watch?v=XbHZMnWAvQI</a>(開cc字幕)</p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="//www.youtube.com/embed/XbHZMnWAvQI" width="560"></iframe></p>
<p></p>
<h5>google 雲端</h5>
<p>cd2020隨身系統下載</p>
<p><a href="https://drive.google.com/drive/folders/1s1QXRshHjpgnLKZeQhqlgytk1qDL7aG4?usp=sharing">https://drive.google.com/drive/folders/1s1QXRshHjpgnLKZeQhqlgytk1qDL7aG4?usp=sharing</a></p>
<h2>week06-09</h2>
<h4>week6  OBS</h4>
<p><img alt="" height="111" src="/images/下載.jpg" width="111"/></p>
<p>1.download and install "OBS"</p>
<p>   link: <a href="https://obsproject.com/">https://obsproject.com/</a></p>
<p>2.open and setting hot key</p>
<p>3.新增顯示器畫面與錄製電腦螢幕</p>
<p>4.新增視訊畫面與錄製個人畫面</p>
<h4>OBS與Youtube 直播串流</h4>
<p>1.進到youtube開始直播，設定好相關資訊後會產生串流金鑰</p>
<p>2.接著開啟obs點右下角的開始串流，或者是進入設定找到串流介面</p>
<p>3.進到串流設定介面之後，要把服務位址改成youtube，然後複製youtube直播設定介面產生的串流金鑰，貼上至obs的串流金鑰裡</p>
<p>4.完成串流金鑰設定之後即可點擊youtube右上角開始直播</p>
<h4>assignment2- topic (翻譯)</h4>
<p>我分工的部分是 : Design Collaboration Better Products</p>
<p>link : <a href="https://drive.google.com/file/d/1YHQwYduSMisiJQS-Jr_HhJghzIqP_SBc/view">https://drive.google.com/file/d/1YHQwYduSMisiJQS-  Jr_HhJghzIqP_SBc/view</a></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/a69tNWKmC64" width="560"></iframe></span></p>
<h4>week7   Youtobe串流OBS直播 (線上課程)</h4>
<p>本週利用youtube配合obs進行直播線上課程教學，所有組員利用觀看老師直播進行課程，各組組長則是利用meet與老師進行直播。</p>
<h2>week10-14</h2>
<p><span></span></p>
<h2>week15-18</h2>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>