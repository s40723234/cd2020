<h1>Weeks</h1>
<h2>Week1-5</h2>
<h4>week1-建倉儲</h4>
<p>1.下載可攜系統</p>
<p>2.建一個新倉儲"cd2020"</p>
<p>3.進入tmp</p>
<p>4.git clone <a href="https://github.com/s40723234/cd2020.git">https://github.com/s40723234/cd2020.git</a></p>
<p>5.git submodule add <a href="https://github.com/mdecourse/cmsimde.git">https://github.com/mdecourse/cmsimde.git</a></p>
<p>6.進入cmsimde，輸入python -m pip install flask_cors</p>
<p>7.開始編輯倉儲</p>
<p>8.處理結束，git status &gt; git add . &gt;git commit -m"標題" &gt; git push</p>
<p>9.開啟github倉儲設定，點選要推送的branch</p>
<h4>week1-update python 3.8.2</h4>
<p>1.download 3.8.2安裝檔</p>
<p>2.開啟 點擊customize intallation </p>
<p>3.cancel pip</p>
<p>4.改路徑至Y槽"py382"</p>
<p>5.開編輯器 開"start_mdecourse.bat"</p>
<p>6.將檔中的py373全部改成py382 ，restart</p>
<p>7.於Y槽中執行，python get-pip.py 來安裝pip</p>
<p>8.完成之後，來安裝軟件包，輸入pip install flask</p>
<p>9.安裝flask . markdown . lxml .bs4 .flask_cors  .pelican .leo</p>
<h4>week2-分組</h4>
<p>以下是直播影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/r0AABAp474U" width="560"></iframe></p>
<h4>Assignment 1-可攜系統</h4>
<p>step001 - 先在隨身碟底下創一個 CD2020 的資料夾，並在裡面創一個 data</p>
<p>step002 - 在 data 下新增資料夾，分別有 PortableGit/msys2/python777/wscite666                     /tmp/home</p>
<p><span>step003 - PortableGit</span></p>
<p>             1.<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a> 下載 <span>64-bit Git for Windows Portable </span></p>
<p><span>             2.安裝到 CD2020/data/PortableGit </span></p>
<p><span>step003 - </span><span>msys2</span></p>
<p><span>            1. <a href="https://www.msys2.org/">https://www.msys2.org/</a> 下載 msys2-x86_64-20190524.exe </span></p>
<p><span>             2.安裝檔案到 CD2020/data/msys2</span></p>
<p><span> step004 - python777</span></p>
<p><span>            1. <a href="https://www.python.org/downloads/release/python-382/">https://www.python.org/downloads/release/python-382/</a> 下載 Windows x86-                  64 executable installer </span></p>
<p><span>            2.安裝並複製檔案到 CD2020/data/python777</span></p>
<p><span>steo005 - wscite666</span></p>
<p><span>          1.到 <a href="https://www.scintilla.org/SciTEDownload.html">https://www.scintilla.org/SciTEDownload.html</a> 下載 full 64-bit download                </span></p>
<p><span>           2.解壓縮檔案到 CD2020/data/wscite237輯器執行的 Scite.exe </span></p>
<p><span>           3.打開</span><span>Options 下的 Global Options File 其中的預設值 code.page=0 修改設定                  </span><span>為 </span><span>code.page=65001，將 load.on.activate=1 前面的井字號拿掉</span></p>
<p>step006 - home</p>
<p>          1.到2019fall/data/home  copy   .gitconfig paste home </p>
<p>step007 - tcc</p>
<p>         1.到 <a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a> 接著到命令提示字元裡 git                                       clone <a href="https://github.com/TinyCC/tinycc.git">https://github.com/TinyCC/tinycc.git</a> tcc</p>
<p>step008 - Jupyterlab</p>
<p><span>         1.命令提示字元裡 pip install jupyterlab==2.0.1 自動安裝</span></p>
<p>step009 - Fossil SCM</p>
<p>       1.到 <a href="https://www.fossil-scm.org/home/doc/trunk/www/index.wiki">https://www.fossil-scm.org/home/doc/trunk/www/index.wiki</a> 下載fossil scm</p>
<p>        2.<span>解壓到 CD2020/data</span></p>
<p>step010 - Flutter</p>
<p>        1.<a href="https://github.com/flutter/flutter">https://github.com/flutter/flutter</a> 裡<span>接著到命令提示字元裡 git                                         </span><span>clone https://github.com/flutter/flutter.git -b stable</span></p>
<p><span>step011 - vscode</span></p>
<p><span>       1.<a href="https://github.com/microsoft/vscode">https://github.com/microsoft/vscode</a> 接著到命令提示字元裡 git                                       </span><span>clone https://github.com/microsoft/vscode.git  vscode</span></p>
<p>step012 - tmp</p>
<p>        1.git clone 自己的倉儲</p>
<p><span>        2.安裝 pip 和 cmsimde 所需模組</span></p>
<p><span>step013 - </span></p>
<p><span>       1.先到 <a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a> 下載 get-pip.py，並用程式碼自動                    </span><span>載入</span></p>
<p><span><img alt="" height="287" src="https://s40723237.github.io/cd2020/images/WgLEB8kAJe.png" width="550"/></span></p>
<h2>week6-9</h2>
<p><span></span></p>
<h2>week10-14</h2>
<h2>week15-18</h2>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>